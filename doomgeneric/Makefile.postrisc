################################################################
#
# $Id:$
#
# $Log:$
#

ifeq ($(V),1)
	VB=''
else
	VB=@
endif

OPTIMIZATION_LEVEL=-O2
ARCHNAME=postrisc
CPUNAME=pv1
CODE_MODEL=small
RELOCATION_MODEL=pic
TLS_MODEL="local-dynamic"

# /hdd/postrisc
POSTRISC_ROOT_PATH=../..

POSTRISC_LLVM_PATH=$(POSTRISC_ROOT_PATH)/llvm-build/bin
MUSL_PATH=$(POSTRISC_ROOT_PATH)/musl

MUSL_BUILD_PATH=$(POSTRISC_ROOT_PATH)/musl_$(ARCHNAME)
# $(MUSL_PATH)/build/postrisc
MUSL_LIB_PATH=$(MUSL_BUILD_PATH)/lib

POSTRISC_LIBS = `sdl2-config --cflags --libs` -lSDL2_mixer

CC=$(POSTRISC_LLVM_PATH)/clang
LINKER=$(POSTRISC_LLVM_PATH)/ld.lld

#CFLAGS = -cc1 -triple $(ARCHNAME) -target-cpu $(CPUNAME) -mrelocation-model $(RELOCATION_MODEL) -mcmodel=$(CODE_MODEL) -ftls-model=$(TLS_MODEL) $(OPTIMIZATION_LEVEL) \
# -mframe-pointer=none \
#    -D__x86_64__ \
#    -isystem /usr/include \
#    -isystem /usr/include/x86_64-linux-gnu \
#    -nodefaultlibs -nostdlib \

CFLAGS=-c -std=c11 -fPIC $(OPTIMIZATION_LEVEL) \
    -mcmodel=small \
    -mcpu=pv1 \
    -D_GNU_SOURCE \
    -D_BSD_SOURCE \
    -DCMAP256 \
    -Wall \
    -pedantic \
    -Wcast-align \
    -Wcast-qual \
    -Wdate-time \
    -Wformat=2 \
    -Wextra \
    -Winit-self \
    -Winline \
    -Wmissing-field-initializers \
    -Wmissing-include-dirs \
    -Wno-address-of-packed-member \
    -Wpedantic \
    -Wpointer-arith \
    -Wredundant-decls \
    -Wshadow \
    -Wundef \
    -Wuninitialized \
    -Wunreachable-code \
    -Wunused-macros \
    -Wwrite-strings \
    -fPIE \
    -fuse-init-array \
    -mllvm -verify-analysis-invalidation=0 \
    -mllvm --enable-nullification=0 \
    -mllvm --enable-block-merging=1 \
    -mllvm --postrisc-enable-dense-calls=1 \
    -mllvm --enable-move-merging=1 \
    -mllvm -inline-threshold=100 \
    -fno-unroll-loops \
    -isystem $(MUSL_PATH)/include \
    -isystem $(MUSL_PATH)/arch/$(ARCHNAME) \
    -isystem $(MUSL_PATH)/arch/generic \
    -isystem $(MUSL_BUILD_PATH)/obj/include \
    -fno-optimize-sibling-calls \
    -fno-slp-vectorize \
    -fno-vectorize \
    -fno-tree-vectorize \
    -fvisibility-inlines-hidden \
    -fvisibility=hidden \

#    -ffast-math \
#    -fomit-frame-pointer \

LDFLAGS+=--pie

# use musl libc.a
LIBS+=--library-path "$(MUSL_LIB_PATH)" --library :libc.a

# subdirectory for objects
OBJDIR=build
OUTPUT=../bin/doomgeneric.$(ARCHNAME)

SRC_DOOM = dummy.o am_map.o doomdef.o doomstat.o dstrings.o d_event.o d_items.o d_iwad.o d_loop.o d_main.o d_mode.o d_net.o f_finale.o f_wipe.o g_game.o hu_lib.o hu_stuff.o info.o i_cdmus.o i_endoom.o i_joystick.o i_scale.o i_sound.o i_system.o i_timer.o memio.o m_argv.o m_bbox.o m_cheat.o m_config.o m_controls.o m_fixed.o m_menu.o m_misc.o m_random.o p_ceilng.o p_doors.o p_enemy.o p_floor.o p_inter.o p_lights.o p_map.o p_maputl.o p_mobj.o p_plats.o p_pspr.o p_saveg.o p_setup.o p_sight.o p_spec.o p_switch.o p_telept.o p_tick.o p_user.o r_bsp.o r_data.o r_draw.o r_main.o r_plane.o r_segs.o r_sky.o r_things.o sha1.o sounds.o statdump.o st_lib.o st_stuff.o s_sound.o tables.o v_video.o wi_stuff.o w_checksum.o w_file.o w_main.o w_wad.o z_zone.o w_file_stdc.o i_input.o i_video.o doomgeneric.o doomgeneric_postrisc.o
OBJS += $(addprefix $(OBJDIR)/, $(SRC_DOOM))

all:	 $(OUTPUT)

clean:
	rm -rf $(OBJDIR)
	rm -f $(OUTPUT)
	rm -f $(OUTPUT).gdb
	rm -f $(OUTPUT).map

$(OUTPUT):	$(OBJS)
	@echo [Linking $@]
#	$(VB)$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) -o $(OUTPUT) $(LIBS)
	${LINKER} $(LDFLAGS) $(LIBS) -o $(OUTPUT) $(OBJS) $(MUSL_LIB_PATH)/Scrt1.o

$(OBJS): | $(OBJDIR)

$(OBJDIR):
	mkdir -p $(OBJDIR)

$(OBJDIR)/%.o:	%.c
	@echo [Compiling $<]
	$(VB)$(CC) $(CFLAGS) $< -o $@

print:
	@echo OBJS: $(OBJS)

